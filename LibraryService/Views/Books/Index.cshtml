
@model IEnumerable<LibraryService.Models.Book>

@{
    ViewBag.Title = "Index";
}


@using PagedList.Mvc;
@using PagedList;
@using Microsoft.AspNet.Identity
@using LibraryService.Models;

@Scripts.Render("~/Scripts/Sorting.js")


<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    PagedList<LibraryService.Models.Book> books = ViewBag.onePageOfBooks;
    <h2>List of Books</h2>
    if (this.User.IsInRole("Admin") || this.User.IsInRole("Staff"))
    {
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
    }

    using (Html.BeginForm())
    {
        <p>
            Search books: @Html.TextBox("SearchString")
            <input type="submit" value="Search" />
            <div>
                @Html.DropDownList("Genre",
                                 new SelectList(Enum.GetValues(typeof(LibraryService.Models.Genre))),
                                 "Select Genre",
                                 new { @class = "form-control" })
            </div>
            <div>
                @Html.DropDownList("Status",
                                 new SelectList(Enum.GetValues(typeof(LibraryService.Models.Status))),
                                 "Select Status",
                                 new { @class = "form-control" })
            </div>
        </p>
    }

    if (books.Count > 0)
    {
        <table class="table" id="myTable">
            <thead class="bg-info">
                <tr>
                    <th onclick="sort(0)" onmouseover="this.style.textDecoration = 'underline'" onmouseout="this.style.textDecoration = 'none'">
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th onclick="sort(1)" onmouseover="this.style.textDecoration = 'underline'" onmouseout="this.style.textDecoration = 'none'">
                        @Html.DisplayNameFor(model => model.Author)
                    </th>
                    <th onclick="sort(2)" onmouseover="this.style.textDecoration = 'underline'" onmouseout="this.style.textDecoration = 'none'">
                        @Html.DisplayNameFor(model => model.BookGenre)
                    </th>
                    <th onclick="sort(3)" onmouseover="this.style.textDecoration = 'underline'" onmouseout="this.style.textDecoration = 'none'">
                        @Html.DisplayNameFor(model => model.LibraryId)
                    </th>
                    <th onclick="sort(4)" onmouseover="this.style.textDecoration = 'underline'" onmouseout="this.style.textDecoration = 'none'">
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th></th>
                </tr>
            </thead>
            @foreach (var item in ViewBag.OnePageOfBooks)
            {
                <tr>
                    <td>
                        @item.Title
                    </td>
                    <td>
                        @item.Author
                    </td>
                    <td>
                        @item.BookGenre
                    </td>
                    <td>
                        @(new LibraryService.DAL.LibraryContext().Libraries.Find(item.LibraryId).Name)
                    </td>
                    <td>
                        @item.Status
                    </td>

                    <td>
                        @if (this.User.IsInRole("Admin") || this.User.IsInRole("Staff"))
                        {
                            <div>
                                @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.id }) |
                                @Html.ActionLink("Details", "Details", new { id = item.id })
                            </div>
                        }
                        else
                        {
                            if (Request.IsAuthenticated)
                            {
                                if (item.ReservedBy != null && item.ReservedBy.UserId == HttpContext.Current.User.Identity.GetUserId())
                                {
                                    if (((List<User>)item.BookmarkedBy).Select(u => u.UserId).Contains(HttpContext.Current.User.Identity.GetUserId()))
                                    {
                                        <div>
                                            @Html.ActionLink("Details", "DetailsLibraryItem", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" }) |
                                            @Html.ActionLink("Unreserve", "DeleteReservation", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" }) |
                                            @Html.ActionLink("UnBookmark", "DeleteBookmark", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" })
                                        </div>
                                    }
                                    else
                                    {
                                        <div>
                                            @Html.ActionLink("Details", "DetailsLibraryItem", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" }) |
                                            @Html.ActionLink("Unreserve", "DeleteReservation", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" }) |
                                            @Html.ActionLink("Bookmark", "BookmarkLibraryItem", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" })
                                        </div>
                                    }
                                }
                                else
                                {
                                    if (((List<User>)item.BookmarkedBy).Select(u => u.UserId).Contains(HttpContext.Current.User.Identity.GetUserId()))
                                    {
                                        if (item.Status == Status.Reserved)
                                        {
                                            <div>
                                                @Html.ActionLink("Details", "DetailsLibraryItem", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" }) |
                                                @Html.ActionLink("UnBookmark", "DeleteBookmark", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" })
                                            </div>
                                        }
                                        else
                                        {
                                            <div>
                                                @Html.ActionLink("Details", "DetailsLibraryItem", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" }) |
                                                @Html.ActionLink("Reserve", "ReserveLibraryItem", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" }) |
                                                @Html.ActionLink("UnBookmark", "DeleteBookmark", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" })
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        if (item.Status == Status.Reserved)
                                        {
                                            <div>
                                                @Html.ActionLink("Details", "DetailsLibraryItem", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" }) |
                                                @Html.ActionLink("Bookmark", "BookmarkLibraryItem", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" })
                                            </div>
                                        }
                                        else
                                        {
                                            <div>
                                                @Html.ActionLink("Details", "DetailsLibraryItem", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" }) |
                                                @Html.ActionLink("Reserve", "ReserveLibraryItem", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" }) |
                                                @Html.ActionLink("Bookmark", "BookmarkLibraryItem", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" })
                                            </div>
                                        }
                                    }
                                }
                            }
                            else
                            {
                                @Html.ActionLink("Details", "DetailsLibraryItem", new { id = item.id, method = "Index", contr = "Books", Controller = "LibraryItems" })
                            }
                        }
                    </td>
                </tr>
            }
        </table>

        @Html.PagedListPager((IPagedList)ViewBag.OnePageOfBooks, page => Url.Action("Index", new { page }))


    }
    else
    {
        <p>We can't find any books you are looking for.</p>
    }
}

