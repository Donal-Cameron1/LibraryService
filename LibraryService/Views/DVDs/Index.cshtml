@model IEnumerable<LibraryService.Models.DVD>

@{
    ViewBag.Title = "Index";
}

@using PagedList.Mvc;
@using PagedList;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    PagedList<LibraryService.Models.DVD> dvds = ViewBag.onePageOfDVDs;
    if (dvds.Count > 0)
    {
        <h2>List of DVDs</h2>

        <p>
            @Html.ActionLink("Create New", "Create")
        </p>

        using (Html.BeginForm())
        {
            <p>
                Search books: @Html.TextBox("SearchString")
                <input type="submit" value="Search" />
                <div>
                    @Html.DropDownList("Genre",
                          new SelectList(Enum.GetValues(typeof(LibraryService.Models.Genre))),
                          "Select Genre",
                          new { @class = "form-control" })
                </div>
                <div>
                    @Html.DropDownList("Status",
                          new SelectList(Enum.GetValues(typeof(LibraryService.Models.Status))),
                          "Select Status",
                          new { @class = "form-control" })
                </div>
            </p>
        }


        @Html.ActionLink("See New DVDs", "GetNewDVDs")

        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DVDGenre)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Publisher)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Director)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Duration)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AgeRestriction)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PublishedAt)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateAdded)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LibraryId)
                </th>

                <th></th>
            </tr>

            @foreach (var item in ViewBag.onePageOfDVDs)
            {
                <tr>
                    <td>
                        @item.Title
                    </td>
                    <td>
                        @item.DVDGenre
                    </td>
                    <td>
                        @item.Publisher
                    </td>
                    <td>
                        @item.Director
                    </td>
                    <td>
                        @item.Duration min
                    </td>
                    <td>
                        @item.AgeRestriction.ToString().Replace("_", " ")
                    </td>
                    <td>
                        @item.PublishedAt
                    </td>
                    <td>
                        @item.Status
                    </td>
                    <td>
                        @item.Type
                    </td>
                    <td>
                        @item.DateAdded.ToString("MM/dd/yyyy")
                    </td>
                    <td>
                        @(new LibraryService.DAL.LibraryContext().Libraries.Find(item.LibraryId).Name)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.id })|
                        @Html.ActionLink("Reserve", "Reserve", new { id = item.id })|
                        @Html.ActionLink("Bookmark", "Bookmark", new { id = item.id })
                    </td>
                </tr>
            }

            @Html.PagedListPager((IPagedList)ViewBag.onePageOfDVDs, page => Url.Action("Index", new { page }))

        </table>
    }
    else
    {
        <h2>Sorry.</h2>
        <p>We can't find any DVDs you are looking for</p>
        @Html.ActionLink("Back to List", "Index")
    }
}

